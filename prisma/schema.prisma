generator client {
  provider = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider  = "mysql"
  url       = env("DATABASE_URL")
  //directUrl = env("DIRECT_URL")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
// This is your updated User model.
// ใช้ Int แทน BigInt สำหรับ Dev/Local MySQL
model User {
  id                  Int      @id @default(autoincrement())
  name                String
  email               String   @unique
  password            String
  role                String   @default("member")
  created_at DateTime  @default(now()) @db.Timestamp(6)
  updated_at DateTime? @default(now()) @db.Timestamp(6)

  // Defines a one-to-many relationship: a user can have many files and projects.
  files UserFile[]
  projects Project[]
}

// เพิ่ม Project model สำหรับจัดกลุ่มไฟล์
model Project {
  id          Int      @id @default(autoincrement())
  name        String   // ชื่อโครงการ
  description String?  // คำอธิบายโครงการ (ไม่บังคับ)
  
  created_at DateTime  @default(now()) @db.Timestamp(6)
  updated_at DateTime? @default(now()) @db.Timestamp(6)

  // Foreign key linking to the User model
  userId Int

  // Relationships
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  files UserFile[]

  @@index([userId])
}

model UserFile {
  id               Int @id @default(autoincrement())
  originalFileName String
  storagePath      String
  fileExtension    String
  downloadStatus   String @default("pending") // เพิ่มคอลัมน์นี้
  downloadedAt     DateTime? // เพิ่มวันที่ที่ดาวน์โหลด (ถ้าต้องการ)

  created_at DateTime  @default(now()) @db.Timestamp(6)
  updated_at DateTime? @default(now()) @db.Timestamp(6)

  // Foreign keys
  userId Int
  projectId Int?  // ทำให้เป็น optional เพื่อรองรับไฟล์เก่าที่ยังไม่ได้จัดกลุ่ม

  // Relationships
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  project Project? @relation(fields: [projectId], references: [id], onDelete: SetNull)
  attachmentFiles AttachmentFile[] // ความสัมพันธ์กับไฟล์แนบ

  @@index([userId])
  @@index([projectId])
}

// ตารางสำหรับไฟล์แนบ
model AttachmentFile {
  id       Int    @id @default(autoincrement())
  fileName String
  filePath String
  fileSize Int
  mimeType String

  created_at DateTime  @default(now()) @db.Timestamp(6)
  updated_at DateTime? @default(now()) @db.Timestamp(6)

  // Foreign key linking to the UserFile model
  userFileId Int

  // Relationships
  userFile UserFile @relation(fields: [userFileId], references: [id], onDelete: Cascade)

  @@index([userFileId])
}